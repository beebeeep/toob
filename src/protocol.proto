syntax = "proto3";
import "google/protobuf/timestamp.proto";

package toob.protocol;

enum Request {
  Noop = 0;
  Produce = 1;
  Consume = 2;
}

enum Error {
  None = 0;
  ProduceError = 1;
}

message Message {
  google.protobuf.Timestamp timestamp = 1;
  bytes value = 2;
  optional bytes key = 3;
  map<string, bytes> metadata = 4;
}
  
// Header is sent before each request and identifies its type
message Header {
  Request request_id = 1;
  bytes request = 2; // nested protobuf message containing the specific API request
}


// == Producing ==
message ProduceRequest {
  string Topic = 1;
  int32 Partition = 2;
  int32 BatchSize = 3;
}
// Client now sends messages, total BatchSize messages
message ProduceResponse {
  Error error = 1;
}

// == Consuming ==
message ConsumeRequest {
  string Topic = 1;
  int32 Partition = 2;
  int64 StartOffset = 3;
  optional int32 MaxMessages = 4;
}
message ConsumeResponse {
  Error error = 1;
}
// Server now streams messages, up to MaxMessages, or ifinitely if MaxMessages is not specified


